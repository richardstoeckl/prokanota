"""

Copyright Richard St√∂ckl 2025.
Distributed under the Boost Software License, Version 1.0.
(See accompanying file LICENSE or copy at 
https://www.boost.org/LICENSE_1_0.txt)

"""

import pandas as pd
import re
import os
import glob
from pathlib import Path
from snakemake.utils import validate
from snakemake.utils import min_version

########## check minimum snakemake version ##########
min_version("8.27.1")

########## load config and metadata sheets ##########

configfile: os.path.join(workflow.basedir, "../", "config", "config.yaml")
metadataFile = os.path.join(workflow.basedir, "../", "config", config["global"]["metadataFile"])

metadata = pd.read_csv(metadataFile, sep=",").set_index("sample_id", drop=False)
NAMES = metadata.sample_id.to_list()
path = {k: v for (k, v) in metadata.path.to_dict().items()}

LOGPATH = os.path.normpath(config["global"]["logPath"])
INTERIMPATH = os.path.normpath(config["global"]["interimPath"])
RESULTPATH = os.path.normpath(config["global"]["resultPath"])
DBPATH = os.path.normpath(config["global"]["dbPath"])

include: os.path.join(workflow.basedir,"rules", "prepProteins.smk")
include: os.path.join(workflow.basedir,"rules", "prepDBs.smk")
include: os.path.join(workflow.basedir,"rules", "searchDBs.smk")
include: os.path.join(workflow.basedir,"rules", "parseSearchResults.smk")

########## Target Rule ##########

rule all:
    input:
        expand(os.path.join(RESULTPATH, "{id}", "annotation", "{id}_finalAnnotation.tsv"), id=NAMES),
        os.path.join(RESULTPATH,"common","annotation","finalAnnotation.tsv"),
